module edge_detector (i_spdif, i_rst_n, i_clk, i_ena, o_zero, o_one, o_head, o_shift_ena);

input wire i_spdif;
input wire i_rst_n;
input wire i_clk;
input wire i_ena;

output reg o_zero;
output reg o_one;
output reg o_head;
output reg o_shift_ena;

wire is_edge;
reg counter;

assign is_edge = ff_bfr ^ i_spdif; // xor

always @(posedge clk or negedge i_rst_n)
begin
	if (~i_rst_n) begin
		counter <= 0;
		o_zero <= 1'b0;
		o_one <= 1'b0;
		o_head <= 1'b0;
		o_shift_ena <= 1'b0;
	end else begin
		if (ena)
			ff_bfr <= i_spdif;
			if (is_edge) begin
				counter <= 0;
				if ((counter >=) | (counter <=))
					o_zero <= 1'b1;
				else if ((counter >=) | (counter <=))
					o_one <= 1'b1;
				else if ((counter >=) | (counter <=))
					o_head <= 1'b1;
				else
				
				o_shift_ena <= 1'b1;
				
			end else begin
				counter <= counter + 1'b1;
				o_zero <= 1'b0;
				o_one <= 1'b0;
				o_head <= 1'b0;
				o_shift_ena <= 1'b0;
			end
		end
			
	end
end

endmodule
